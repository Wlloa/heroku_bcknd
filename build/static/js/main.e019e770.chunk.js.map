{"version":3,"sources":["Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toogleNote","label","important","content","onClick","baseURl","axios","get","then","response","data","newObj","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","useEffect","noteService","initialNotes","console","log","className","map","i","find","updatedNote","toogleImportant","onSubmit","date","Date","Math","random","concat","type","value","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAceA,MAZf,YAAmC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAEXC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAA8BC,Q,gBCPpCI,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC2D9BK,MAtEf,WAAe,MAIaC,mBAAS,IAJtB,mBAINC,EAJM,KAICC,EAJD,OAKiBF,mBAAU,IAL3B,mBAKNG,EALM,KAKGC,EALH,KAwDb,OAjDAC,qBAAU,WACRC,IACCd,MAAK,SAACe,GACLC,QAAQC,IAAIF,GACZL,EAASK,QAOV,IAuCD,sBAAKG,UAAU,MAAf,UACE,uCACCT,EAAMU,KAAI,SAAC5B,EAAM6B,GAAP,OACT,cAAC,EAAD,CAAc7B,KAAMA,EAAMC,WAAY,kBAlBpB,SAACa,GACvB,IAAMd,EAAOkB,EAAMY,MAAK,SAAA9B,GAAI,OAAIA,EAAKc,KAAOA,KACtCM,EAAO,2BAAOpB,GAAP,IAAaG,WAAYH,EAAKG,YAE3CoB,EAAmBT,EAAIM,GACtBX,MAAM,SAAAsB,GACLZ,EAASD,EAAMU,KAAI,SAAA5B,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAM+B,SAYJC,CAAgBhC,EAAKc,MAAtDe,MAEb,uBAAMI,SA1CS,WACf,IAAMjC,EAAO,CACXI,QAASgB,EACTc,KAAM,IAAIC,KACVhC,UAAWiC,KAAKC,SAAW,IAG7Bd,EAAmBvB,GAClBS,MAAK,SAAAW,GACJK,QAAQC,IAAIN,GACZD,EAASnB,EAAKsC,OAAOlB,IACrBC,EAAW,QA+Bb,UACE,uBAAOkB,KAAK,OAAOC,MAAOpB,EAASqB,SAAU,SAACC,GAAD,OAAOrB,EAAWqB,EAAEC,OAAOH,UACxE,wBAAQD,KAAK,SAAb,kCChERK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e019e770.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Note({note, toogleNote}) {\r\n\r\n    const label = note.important ? 'make not important' : 'make important' \r\n\r\n    return (\r\n        <li>\r\n            {note.content}\r\n            <button onClick={toogleNote}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\n\r\nconst baseURl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObj) => {\r\n    const request = axios.post(baseURl, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseURl}/${id}`, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll,\r\n  create,\r\n  update,\r\n}","import React, {useEffect, useState} from 'react';\n// import axios from 'axios';\nimport Note from './Note';\nimport noteService from './services/notes'\n\nfunction App() {\n\n  // const url = 'http://localhost:3002/notes';\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState ('')\n\n  useEffect(() => {\n    noteService.getAll()\n    .then((initialNotes) => {\n      console.log(initialNotes)\n      setNotes(initialNotes)\n    })\n    // axios.get(url)\n    // .then((response) => {\n    //   console.log(response)\n    //   setNotes(response.data)\n    // })\n  }, [])\n\n  const createNote = ()=> {\n      const note = {\n        content: newNote,\n        date: new Date(),\n        important: Math.random() < 0.5\n      }\n\n      noteService.create(note)\n      .then(newNote => {\n        console.log(newNote)\n        setNotes(note.concat(newNote))\n        setNewNote('')\n      })\n      // axios.post(url, note)\n      // .then(response => {\n      //   console.log(response)\n      //   setNotes(note.concat(response.data))\n      //   setNewNote('')\n      // })\n\n  }\n\n  const toogleImportant = (id) => {\n    const note = notes.find(note => note.id === id)\n    const newNote = {...note, important: !note.important}\n\n    noteService.update(id, newNote)\n    .then( updatedNote => {\n      setNotes(notes.map(note => note.id !== id ? note: updatedNote))\n    })\n    // axios.put(url, newNote).then( response => {\n    //   setNotes(notes.map(note => note.id !== id ? note: response.data))\n    // })\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Axios</h1>\n      {notes.map((note, i) => (\n        <Note key={i} note={note} toogleNote={() => toogleImportant(note.id)}/>\n      ))}\n      <form onSubmit={createNote}>\n        <input type=\"text\" value={newNote} onChange={(e) => setNewNote(e.target.value)}/>\n        <button type=\"submit\">Create a Note</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}